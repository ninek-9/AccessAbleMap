name: prod-pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  python-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run flake8
        run: flake8 .
    
  unit-and-coverage-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        
      - name: Install dependencies 
        run: pip install -r requirements.txt 
      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage report -m --fail-under=80 app/api/places.py app/api/reviews.py


  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [python-formatting, unit-and-coverage-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ninek-9 --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t ghcr.io/ninek-9/accessable-maps-places:prod --push .

  deploy-to-aci:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: sse-lab
          dns-name-label: accessable-maps-places
          image: ghcr.io/ninek-9/accessable-maps-places:prod
          registry-login-server: ghcr.io
          registry-username: ninek-9
          registry-password: ${{ secrets.GHCR_TOKEN }}
          secure-environment-variables: GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} SECRET_KEY=${{ secrets.SECRET_KEY }} DB_NAME=${{ secrets.DB_NAME }} DB_USER=${{ secrets.DB_USER }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_HOST=${{ secrets.DB_HOST }} DB_PORT=${{ secrets.DB_PORT }}     
          name: accessable-maps
          location: 'Central US'
